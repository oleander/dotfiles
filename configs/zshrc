
export ROOT=$HOME/.dotfiles
export PATH="/opt/homebrew/bin:$PATH"

source ~/.dotfiles/shell/functions
source ~/.dotfiles/shell/exports
source ~/.dotfiles/shell/aliases

export ZSH_CUSTOM="$HOME/.dotfiles/zsh"
export ZSH="$HOME/.oh-my-zsh"


# Oh my
CASE_SENSITIVE="true"
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"
# DISABLE_UPDATE_PROMPT=true
[ -z "$TERM" ] && export TERM=xterm-256color
plugins=(colored-man-pages colorize autojump profiles dotenv)
source $ZSH/oh-my-zsh.sh

# Colors
autoload -U colors
colors
setopt prompt_subst

export ZSH_THEME_GIT_COMMITS_AHEAD_PREFIX=" "
export ZSH_THEME_GIT_COMMITS_BEHIND_PREFIX=" "
export ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[red]%}⁉️"
export ZSH_THEME_GIT_PROMPT_CLEAN=""
# export ZSH_THEME_GIT_PROMPT_CACHE=1
export ZSH_GIT_PROMPT_SHOW_UPSTREAM=1

# if hostname ends with local, use home, otherwise use work
# use a method to get the hostname, so we can mock it in tests
function chostname() {
    if [[ $(hostname) =~ local$ ]]; then
        echo "home"
    else
        echo "work"
    fi
}

# local STATUS="[mini] %F{8}%~%{$reset_color%}"
local STATUS="[$(chostname)] %F{8}%~%{$reset_color%}"
NEWLINE=$'\n'
export PROMPT="$STATUS%F{reset_color} "
export RPROMPT='%F{yellow}$(git_current_branch)%F{blue} $(git_prompt_short_sha)%F{green}$(git_commits_behind)%F{cyan}$(git_commits_ahead) %F{magenta}$(parse_git_dirty)%F{reset_color}'

setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt HIST_VERIFY
setopt SHARE_HISTORY # share history between sessions
setopt EXTENDED_HISTORY # add timestamps to history
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF

setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
REPORTTIME=10 # print elapsed time when more than 10 seconds

autoload -U compinit
compinit

# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

zle -N newtab

# Disable correctness
unsetopt correct_all

export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/binutils/bin:$PATH"
#export PATH="/Users/linusoleander/.volta/bin:$PATH"

# See https://gist.github.com/celso/6cefedb9fce92827ee38e8f7411b8b30
# infocmp $TERM | sed 's/kbs=^[hH]/kbs=\177/' > $TERM.ti
# tic $TERM.ti

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# Podman
# export DOCKER_HOST='unix:///var/run/docker.sock'

#if [ -f $HOME/export-esp.sh ]; then
#  source $HOME/export-esp.sh
#fi

# export PATH=$PATH:$HOME/Code/xtensa-toolchain/release/xtensa-toolchain/bin
#
# export SCCACHE_CACHE_SIZE="3G"
# export RUSTC_WRAPPER=sccache
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
#export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
# export RUSTC_WRAPPER=sccache
# export SCCACHE_DIRECT=true
export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
# export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
#export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
# export LIBCLANG_PATH=/opt/homebrew/opt/llvm/lib


### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk
zinit light zsh-users/zsh-completions
zinit load https://github.com/zsh-users/zsh-autosuggestions.git
zinit load https://github.com/zsh-users/zsh-syntax-highlighting.git

#. ~/.dotfiles/zsh/completions/espup.sh
#export PATH=/opt/homebrew/Cellar/riscv-gnu-toolchain/main/bin/:$PATH
#export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

fpath=(/opt/homebrew/share/zsh/site-functions $fpath)

# export PATH="/opt/homebrew/opt/riscv-openocd/bin:$PATH"
# export PATH="/opt/homebrew/opt/sqlite/bin:$PATH"
# export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
#
#export LC_ALL=en_US.UTF-8
#export LANG=en_US.UTF-8
#
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export PYTHONUTF8=1
source "$HOME/.cargo/env"

export OVERCOMMIT_DISABLE="1"

#export PATH="/Users/linusoleander/Library/Python/3.9/bin:$PATH"

#export LIBCLANG_PATH="/Users/linus/.rustup/toolchains/esp/xtensa-esp32-elf-clang/esp-16.0.0-20230516/esp-clang/lib"
#export PATH="/Users/linus/.rustup/toolchains/esp/riscv32-esp-elf/esp-12.2.0_20230208/riscv32-esp-elf/bin:$PATH"
#export PATH="/Users/linus/.rustup/toolchains/esp/xtensa-esp32s2-elf/esp-12.2.0_20230208/xtensa-esp32s2-elf/bin:$PATH"
#export PATH="/Users/linus/.rustup/toolchains/esp/xtensa-esp32s3-elf/esp-12.2.0_20230208/xtensa-esp32s3-elf/bin:$PATH"
#export PATH="/Users/linus/.rustup/toolchains/esp/xtensa-esp32-elf/esp-12.2.0_20230208/xtensa-esp32-elf/bin:$PATH"

#€export CACHE_DIR="/Volumes/Cache"
# export SCCACHE_REDIS="redis://127.0.0.1:6379/0"
# export RUSTC_WRAPPER="$(which sccache)"
export RUST_ANALYZER_CACHE="$CACHE_DIR/rust-analyzer"
export SCCACHE_CACHE_SIZE="200G"
# export SCCACHE_DIR="$CACHE_DIR/sccache"

eval "$(rbenv init -)"
export PATH="/opt/homebrew/sbin:$PATH"
#export RUSTC_WRAPPER="$(which sccache)"
#export RUST_ANALYZER_CACHE="$CACHE_DIR/rust-analyzer"
#export SCCACHE_CACHE_SIZE="200G"
#export SCCACHE_DIR="$CACHE_DIR/sccache"
