# Set the schema for the configuration
"$schema" = "https://starship.rs/config-schema.json"

# Configuration options
add_newline = true

# Right prompt: battery, command duration, git commit, docker context, time
right_format = "$battery$cmd_duration$git_commit$docker_context$container$direnv$ruby$time$hostname"

# Left prompt: directory, git branch, git status
format = "$directory$git_branch$git_status$git_state$line_break$character"

# Command duration configuration
[cmd_duration]
style = "dimmed purple"
format = "[took $duration]($style) "

# Character configuration
[character]
success_symbol = "[➜](bold green) "
error_symbol = "[➜](bold red) "
vimcmd_symbol = "[λ](bold yellow) "

# Time configuration
[time]
disabled = false
format = "[$time](dimmed blue)"

# Git commit configuration
[git_commit]
format = "[$hash]($style) "
commit_hash_length = 6
style = "dimmed green"
tag_disabled = true
only_detached = false
tag_symbol = '  '

# Git branch configuration
[git_branch]
style = "bold blue"
symbol = " "
format = "on [$branch]($style)"

# Git status configuration
[git_status]
style = "bold red"
format = " [$ahead_count$behind_count$conflicted$untracked$staged$renamed$deleted]($style)"
conflicted = "[X:${count}](bold red)"
ahead = "[A:${count}](bold green)"
behind = "[B:${count}](bold yellow)"
diverged = "[A:${ahead_count} B:${behind_count}](bold magenta)"
up_to_date = ""
untracked = "[U:${count}](bold blue)"
stashed = "[S:${count}](bold cyan)"
# modified = "[C:${count}](bold orange)"
staged = "[A:${count}](bold green)"
renamed = "[R:${count}](bold purple)"
deleted = "[D:${count}](bold red)"

# Git state configuration
[git_state]
format = ' [$state( $progress_current/$progress_total)]($style) '
style = "bold yellow"
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"

# Directory configuration
[directory]
fish_style_pwd_dir_length = 5
truncation_length = 3
truncation_symbol = "…/"
read_only = " 󰌾"
style = "bold green"

# Docker context configuration
[docker_context]
symbol = " "
disabled = false
style = "blue bold"
format = "via [$symbol$context]($style) "
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

# Status configuration
[status]
format = '[✖ $status]($style) '
symbol = ''
style = 'bold red'

# Hostname configuration
[hostname]
ssh_only = true
format = " [$hostname]($style) "
style = "bold dimmed green"
ssh_symbol = " "

# Direnv configuration
[direnv]
disabled = false
format = '[$symbol$loaded]($style) '
symbol = ''
style = 'dimmed red'
detect_files = ['.envrc', '.env', '.env.local']
allowed_msg = '.env'
not_allowed_msg = '!.env'
denied_msg = '!.env'
loaded_msg = '.env'
unloaded_msg = '!.env'

# Container configuration
[container]
format = '[$symbol\[$name\]]($style) '
symbol = '⬢'
style = 'bold red dimmed'
disabled = false

# Language and tool symbols
[aws]
format = 'on [$symbol($profile )(\($region\) )]($style)'
symbol = "  "
style = "bold yellow"
disabled = false
[aws.region_aliases]
us-east-1 = "ue1"
us-west-2 = "uw2"
ap-southeast-2 = "ap2"
[aws.profile_aliases]
CompanyDevProfile = "dev"
CompanyProdProfile = "prod"

[buf]
symbol = " "

[c]
symbol = " "

[cmake]
symbol = " "

[conda]
symbol = " "

[crystal]
symbol = " "

[dart]
symbol = " "

[elixir]
symbol = " "

[elm]
symbol = " "

[fennel]
symbol = " "

[fossil_branch]
symbol = " "

[golang]
symbol = " "

[guix_shell]
symbol = " "

[haskell]
symbol = " "

[haxe]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "
format = "via [$symbol($version )]($style) "
style = "dimmed cyan"
detect_extensions = ["java", "class", "gradle", "jar", "cljs", "cljc"]
detect_files = [
  "pom.xml",
  "build.gradle.kts",
  "build.sbt",
  ".java-version",
  "deps.edn",
  "project.clj",
  "build.boot",
  ".sdkmanrc",
]
detect_folders = []
version_format = "v${raw}"
disabled = false

[julia]
symbol = " "

[kotlin]
symbol = " "

[lua]
symbol = " "

[memory_usage]
symbol = "󰍛 "

[meson]
symbol = "󰔷 "

[nim]
symbol = "󰆥 "

[nix_shell]
symbol = " "

[nodejs]
symbol = " "

[ocaml]
symbol = " "

[os.symbols]
Alpaquita = " "
Alpine = " "
AlmaLinux = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CachyOS = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Kali = " "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
Nobara = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
RockyLinux = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Void = " "
Windows = "󰍲 "

[package]
symbol = "󰏗 "

[perl]
symbol = " "

[php]
symbol = " "

[pijul_channel]
symbol = " "

[python]
symbol = " "

[rlang]
symbol = "󰟔 "

[ruby]
symbol = ""
format = "[$symbol($version )]($style)"
style = "dimmed purple"
detect_extensions = ["rb"]
detect_files = ["Gemfile", ".ruby-version"]
detect_variables = ["RUBY_VERSION", "RBENV_VERSION"]
version_format = "v${raw}"

[rust]
symbol = "󱘗 "
format = "via [$symbol($version )]($style)"
style = "bold blue"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []
version_format = "v${raw}"
disabled = false

[scala]
symbol = " "

[swift]
symbol = " "

[zig]
symbol = " "

[gradle]
symbol = " "
