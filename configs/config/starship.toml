# Set the schema for the configuration
"$schema" = "https://starship.rs/config-schema.json"

# Configuration options
add_newline = true

# Right prompt: battery, command duration, git commit, docker context, time
right_format = "$battery$cmd_duration$git_commit$docker_context$container$direnv$time$hostname"

# Left prompt: directory, git branch, git status
format = "$directory$git_branch$git_status$git_state$line_break$character"

# Command duration configuration
[cmd_duration]
style = "dimmed purple"
format = "[took $duration]($style) "

# Character configuration
[character]
success_symbol = "[‚ûú](bold green) "
error_symbol = "[‚ûú](bold red) "
vimcmd_symbol = "[Œª](bold yellow) "

# Time configuration
[time]
disabled = false
format = "[$time](dimmed blue)"

# Git commit configuration
[git_commit]
format = "[$hash]($style) "
commit_hash_length = 6
style = "dimmed green"
tag_disabled = true
only_detached = false

# Git branch configuration
[git_branch]
style = "bold blue"
symbol = ""
format = "on [$branch]($style)"

# Git status configuration
[git_status]
style = "bold red"
format = " [$untracked$modified$deleted$renamed$conflicted$ahead$behind]($style)"
conflicted = "[‚úñ${count}](red bold)"
ahead = "[AH${count}](green bold)"
behind = "[BH${count}](yellow bold)"
diverged = "[AH${ahead_count}BH${behind_count}](red bold)"
up_to_date = ""
untracked = "[U${count}](blue bold)"
stashed = "[S${count}](cyan bold)"
modified = "[C${count}](yellow bold)"
staged = "[A${count}](green bold)"
renamed = "[R${count}](blue bold)"
deleted = "[D${count}](red bold)"

# Git state configuration
[git_state]
format = ' [$state( $progress_current/$progress_total)]($style) '
style = "bold yellow"
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"

# Directory configuration
[directory]
fish_style_pwd_dir_length = 5
truncation_length = 3
truncation_symbol = "‚Ä¶/"
read_only = " ro"
style = "bold green"

# Ruby configuration
[ruby]
symbol = "üíé "
format = "[$symbol$version]($style) "
style = "dimmed red"

# Rust configuration
[rust]
symbol = "ü¶Ä "
format = "[$symbol$version]($style) "
style = "dimmed red"

# Python configuration
[python]
symbol = "üêç "
format = "[$symbol$version]($style) "
style = "dimmed blue"

# Node.js configuration
[nodejs]
disabled = false
symbol = "‚¨¢ "
format = "[$symbol$version]($style) "
style = "dimmed green"

# Disable unnecessary modules
[package]
disabled = true

[docker_context]
disabled = false
symbol = "üê≥ "
style = "blue bold"
format = "via [$symbol$context]($style) "
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

# Status configuration
[status]
format = '[‚úñ $status]($style) '
symbol = ''
style = 'bold red'

# Hostname configuration
[hostname]
ssh_only = true
format = " [$hostname]($style) "
style = "bold dimmed green"

# Direnv configuration
[direnv]
disabled = false
format = '[$symbol$loaded]($style) '
symbol = ''
style = 'dimmed red'
detect_files = ['.envrc', '.env', '.env.local']
allowed_msg = '.env'
not_allowed_msg = '!.env'
denied_msg = '!.env'
loaded_msg = '.env'
unloaded_msg = '!.env'

# Container configuration
[container]
format = '[$symbol\[$name\]]($style) '
symbol = '‚¨¢'
style = 'bold red dimmed'
disabled = false

# Java configuration
[java]
symbol = "‚òï "
style = "red dimmed"
format = "via [$symbol($version )]($style)"
detect_extensions = ["java", "class", "gradle", "jar", "cljs", "cljc"]
detect_files = [
  "pom.xml",
  "build.gradle.kts",
  "build.sbt",
  ".java-version",
  "deps.edn",
  "project.clj",
  "build.boot",
  ".sdkmanrc",
]
detect_folders = []
version_format = "v${raw}"
disabled = false
