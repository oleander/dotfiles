#!/usr/bin/env ruby --disable-all --enable=gems

require "tty-prompt"
require "colorize"
require "logger"
require "rugged"

def close
  abort "Usage: git squash [X]"
end

args   = ARGV.join(" ").strip
repo   = Rugged::Repository.discover
prompt = TTY::Prompt.new(interrupt: :exit)
INDEX  = ARGV.last.to_i
CUSTOM = :custom

unless branch = repo.branches.detect(&:head?)
  abort "No HEAD"
end

close if args.empty?
close if args.to_i == 0

messages = (0...INDEX).map do |index|
  repo.lookup(repo.rev_parse("HEAD~#{index}").oid)
end.each_with_object({}) do |commit, obj|
  obj[commit.message.lines.first.strip] = commit.oid
end

ticket = ""
if branch.name =~ /(KDB-\d{4})/
  ticket = $1
end

def commit(msg:)
  `git reset --soft "HEAD~#{INDEX}"`
  exec "git", "commit", "-m", msg
end

prefix = ""
unless ticket.empty?
  prefix = " (#{ticket})"
end

options = { per_page: INDEX + 1 }
sha = prompt.select("Commit message for #{INDEX} squashed commits", options) do |menu|
  menu.choice "â˜† Custom message#{prefix}".italic, CUSTOM
  messages.each do |message, value|
    menu.choice(message, value)
  end
end

message = if sha == CUSTOM
  prompt.ask("Commit message", value: ticket + " ", default: CUSTOM)
else
  repo.lookup(sha).message
end

commit(msg: message)
