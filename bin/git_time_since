#!/usr/bin/env ruby -w

# Ruby Version Nice, version 0.1, 2011-03-08
# Copyright (c) 2011, Linus Oleander
# Released under the MIT licens

# Prints time since last commit and the amount of untracked files. 
# Only if the project contains untracked files.

# The ago_in_words method is brought to you by:
# => https://github.com/krainboltgreene/time-ago-in-words
# and modified by me.

require "time"

def ago_in_words(time)
  time_now = Time.now.to_i
  time_then = time.to_i
  time_between = time_now - time_then
  a_second     = 1
  a_minute     = a_second  * 60
  a_hour       = a_minute  * 60
  a_day        = a_hour    * 24
  a_week       = a_day     * 7
  a_fortnight  = a_day     * 14
  a_month      = a_week    * 4
  a_year       = a_week    * 52
  
  if time_between <= a_minute
    count = time_between
    "#{count} sec"
  elsif time_between <= a_hour
    count = time_between / a_minute
    "#{count} min"
  elsif time_between <= a_day
    count = time_between / a_hour
    "#{count} h"
  elsif time_between <= a_week
    count = time_between / a_day
    unit = "day#{'s' unless count == 1}"
    "#{count} #{unit}"
  elsif time_between <= a_month
    count = time_between / a_week
    unit = "week#{'s' unless count == 1}"
    "#{count} #{unit}"
  elsif time_between <= a_year
    count = time_between / a_month
    "#{count} month"
  end
end
time = `git log "HEAD^..HEAD" --pretty=format:%cD 2> /dev/null`
puts "[UT " + `git status --ignore-submodules --porcelain`.split("\n").length.to_s + " : AH " + (`git status --ignore-submodules -s -b`.match(/ahead (\d+)/).to_a[1] || 0).to_s + " : " + (time.empty? ? "N" : ago_in_words(Time.parse(time))) + "]" if not `find . -d -name ".git" -maxdepth 1 2> /dev/null`.empty?