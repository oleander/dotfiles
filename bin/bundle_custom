#!/usr/bin/env ruby -w

# Bundle Custom, version 1.0, 2012-01-19
# Copyright (c) 2011, Linus Oleander
# Released under the MIT licens

# Makes it possible to run:
# => bundle install && 
# git add Gemfile Gemfile.lock &&
# git commit -m "Message"

require "colorize"
require "optparse"

unless File.exist?("Gemfile")
  puts "No Gemfile found".red
end

def prepare_gemfile(raw)
  raw.split("\n").map{|line| line.match(/gem ["|'](.+?)["|']/).to_a[1]}.reject(&:nil?)
end

def read_gemfile
  prepare_gemfile(File.read("Gemfile"))
end

current_gems = read_gemfile
options = {}

optparse = OptionParser.new do |opts|
  options[:hard] = false
  opts.on( '-h', '--hard', 'Removing Gemfile.lock') do
    options[:hard] = true
  end
end

optparse.parse!

system "rm Gemfile.lock" if options[:hard]

if system "bundle install"
  puts "Enter a commit message."
  message = gets
  unless message =~ /.+/i
    changed_gems = prepare_gemfile(`git show :Gemfile`)
    
    message = []
    
    diff = current_gems - changed_gems
    if diff.any?
      message << "Adding #{diff.join(", ")}"
    end
    
    diff = changed_gems-  current_gems
    if diff.any?
      message << "Removing #{diff.join(", ")}"
    end

    if message.any?
      message = message.join(", ")
    else
      message = "Running bundle install"
    end
  end
  
  system "git add Gemfile Gemfile.lock && git commit -m '#{message.gsub(/\n/, "")}' -- Gemfile Gemfile.lock"
end