#!/usr/bin/env fish

# This script monitors the GitHub Actions runs for the current branch using the 
# command 'gh run watch --exit-status'. It sends macOS notifications to inform 
# the user of the success or failure of the GitHub Actions run. Notifications
# are clickable and will direct the user to the GitHub page of the run.

function notify_user
    set status_message $argv[1]
    set run_url $argv[2]

    # Use terminal-notifier for clickable notifications
    # If terminal-notifier is not installed, install it via Homebrew
    if not type -q terminal-notifier
        echo "Installing terminal-notifier..."
        brew install terminal-notifier
    end

    # Display a macOS notification with a click action to open the URL
    terminal-notifier -message "$status_message" -title "GitHub Actions Status" -open "$run_url" -sound "Submarine"
end

function monitor_github_actions
    # Get the current branch name
    set branch_name (git rev-parse --abbrev-ref HEAD)

    while true
        # Get the latest run ID and its status for the branch
        set run_info (gh run list --branch $branch_name --limit 1 --json databaseId,status --jq '.[0] | "\(.databaseId) \(.status)"')

        if test -z "$run_info"
            echo "No runs found for branch $branch_name. Waiting for a new run..."
            sleep 10
            continue
        end

        # Split run_info into run_id and status
        set run_info_array (string split " " $run_info)
        set current_run_id $run_info_array[1]
        set current_status $run_info_array[2]

        # If the latest run is not completed, watch it
        if test "$current_status" = "in_progress" -o "$current_status" = "queued" -o "$current_status" = "waiting" -o "$current_status" = "requested"
            echo "Monitoring run ID $current_run_id..."
            # Run 'gh run watch' for the run ID and wait until it completes
            gh run watch --exit-status $current_run_id

            # Capture the exit status
            set exit_status $status

            # Get the URL of the run
            set run_url (gh run view $current_run_id --json url --jq '.url')

            # Check the exit status and send notification
            if test $exit_status -eq 0
                notify_user "Success! Your GitHub Actions run has completed." $run_url
            else
                notify_user "Failure! Your GitHub Actions run has failed." $run_url
            end
        else
            echo "No in-progress runs found. Waiting for a new run..."
            sleep 10
        end
    end
end

# Start monitoring GitHub Actions
monitor_github_actions

