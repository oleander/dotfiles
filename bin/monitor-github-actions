#!/usr/bin/env fish

set wait_time 3

function notify_user
    set status_message $argv[1]
    set run_url $argv[2]

    if not type -q terminal-notifier
        echo "Installing terminal-notifier..."
        brew install terminal-notifier
    end

    terminal-notifier -message "$status_message" -title "GitHub Actions Status" -open "$run_url" -sound Submarine
end

function monitor_github_actions
    while true
        set branch_name (git rev-parse --abbrev-ref HEAD)
        set last_checked_run_id ""

        set run_info (gh run list --branch $branch_name --limit 1 --json databaseId,status --jq '.[0] | "\(.databaseId) \(.status)"' 2>/dev/null)
        if test -z "$run_info"
            sleep $wait_time
            continue
        end

        set run_info_array (string split " " $run_info)
        set current_run_id $run_info_array[1]
        set current_status $run_info_array[2]

        if test "$current_run_id" = "$last_checked_run_id"
            sleep $wait_time
            continue
        end

        set last_checked_run_id $current_run_id

        if test "$current_status" = in_progress -o "$current_status" = queued -o "$current_status" = waiting -o "$current_status" = requested
            clear
            printf "Monitoring run ID %s...\n" $current_run_id
            echo "Press SPACE to open the GitHub Actions page in your browser."

            set run_url (gh run view $current_run_id --json url --jq '.url' 2>/dev/null)

            # Start a background process to wait for the space bar
            begin
                while true
                    read -s -k 1 char
                    if test "$char" = " "
                        open $run_url
                    end
                end
            end &

            gh run watch --exit-status $current_run_id --interval $wait_time
            set exit_status $status

            if test $exit_status -eq 0
                echo "Run ID $current_run_id completed successfully."
                notify_user "Success! Your GitHub Actions run has completed." $run_url
            else
                echo "Run ID $current_run_id failed."
                notify_user "Failure! Your GitHub Actions run has failed." $run_url
            end
        else
            sleep $wait_time
        end
    end
end

clear
echo "Monitoring GitHub Actions..."
monitor_github_actions
