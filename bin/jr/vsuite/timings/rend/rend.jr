/****
# rendezvous
# Two processes run.  One calls the receiver.  The receiver is an
# input statement. 
****/


public class rend {
  
   public op void dummy();

   // would-be processes
   private op void receiver();
   private op void test();

   private int limit;
   private int factor;
   private int base;
   private int trials;
   private int runs;

   public rend(int factor, int base, int trials) {

      this.factor = factor;
      this.base   = base;
      this.trials = trials;

      limit = factor * base;
      runs = limit * trials;

         send receiver();
         call test(); // should be send,
		      // but don't want to shutdown program until done.
   }

   private void receiver() {
         for (int i = 1; i<=runs ; i++) {
	    inni void dummy() {}
	   
         }
   }

   private void test() {
      long start, finish;

         for (int t = 1; t <= trials; t++ ) {
	    start = System.currentTimeMillis();
	    for (int i = 1; i<=limit ; i++) {
	       call dummy();
            }
            finish =System.currentTimeMillis();
            System.out.println(limit + " times   " + (finish-start) + " ms");
         }
   }

}
