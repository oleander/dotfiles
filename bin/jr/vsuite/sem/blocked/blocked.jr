/****
# program is buggy, but got a segmentation fault before;
# now it exercises the iop.c code that updates blocked_on
#
# nondeterministic order of output.
****/

import edu.ucdavis.jr.JR;

public class blocked {

        public static void main(String [] args) {
		remote jacobi j = new remote jacobi();
		for (int i = 1; i <= 2; i++) {
		    send j.worker(i);
		}

		// let j run long enough to become quiescent
		//		Thread.sleep(5000);
                System.out.println("destroying j");
		// destroy j -- no real equivalent or need in this case
		//		JR.exit(0);
        }
}
