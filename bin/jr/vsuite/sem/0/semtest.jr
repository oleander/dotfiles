//  a simple semaphore test.
//
//  just give a list of small integers to test; they should be echoed in order.
//
//  example: a.out 2 7 8 1 8 2 8

import edu.ucdavis.jr.JR;

public class semtest {

private static final int N = 9;		// maximum input int

private static sem done;		// semaphore for signalling one more number done

// array of semaphores; go[i] is for signalling writer i to go
    private static cap void ()go[] = new cap void()[N+1];

private static op void spin (int);

    public static void main(String [] args)
    {

    // set up array of sems.
    for (int i = 0; i <= N; i++ ) {
        go[i] = new sem;
    }
    
    for (int i = 0; i <= N; i++ ) { // start up writers
        send spin(i);
    }

    for (int i = 0; i < args.length; i++) {
        int n = Integer.parseInt(args[i]);	// get number
////    System.out.println("loop i n "+i+" "+n);
	V(go[n]);			// tell that writer to go
	P(done);			// wait for it to finish
    }
    System.out.println("");		// terminate output
    				        // and quit

            JR.exit(0);  // Where n is the exit value currently ignored
    }

private static void spin (int i){// spin waiting for a signal, then write own index
    while(true){
	P(go[i]);	// wait for semaphore
        System.out.print(i+" ");	// write out own number
	V(done);		// signal done
    }
}
}
