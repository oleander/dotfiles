import java.util.*;

public class aaa
{

    static final int N = 5;
    static java.util.List myIntegers;
    static Iterator ti;
    static {
	myIntegers = new ArrayList();
	for (int k = 800; k <= 803; k++) {
	    myIntegers.add(new Integer(k));
	}
	ti = myIntegers.iterator();

	// not a correct way to iterate through all:
	//    assumes nonempty
	//    skips last
	for ( java.lang.Integer t = (Integer) ti.next();
	      ti.hasNext();
	      t = (Integer) ti.next() ) {
	    System.out.println(t);
	}
    }

    // for use below -- not very pretty...
    Integer hoho() {
	ti = myIntegers.iterator();
	return (Integer) ti.next();
    }

    process p( (int i = 0; i < N; i++; i != 3),
	       (int j = 0; j < N; j++; j != i),
	       (java.lang.Integer t = hoho();
	   ti.hasNext();
	   t = (Integer) ti.next())
	       ) {
	System.out.println(" process p: " + i + " : " + j + " " + t);
    }

}
