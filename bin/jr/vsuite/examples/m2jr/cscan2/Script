0 m2jr -sc cscan.m
0 m2jr -sc repro.m
0 jrc *.jr
0 javac jrGen/*.java
0 jrrun test > sc.out 2>&1
0 scmp all.std sc.out

0 m2jr -sw cscan.m
0 m2jr -sw repro.m
0 jrc *.jr
0 javac jrGen/*.java
0 jrrun test > sw.out 2>&1
0 scmp all.std sw.out

0 m2jr -su cscan.m
0 m2jr -su repro.m
0 jrc *.jr
0 javac jrGen/*.java
0 jrrun test > su.out 2>&1
0 scmp all.std su.out

0 m2jr -sx cscan.m
0 m2jr -sx repro.m
0 jrc *.jr
0 javac jrGen/*.java
0 jrrun test > sx.out 2>&1
0 scmp all.std sx.out

# now for the fun of it, mix signaling disciplines...
0 m2jr -sc cscan.m
0 m2jr -su repro.m
0 jrc *.jr
0 javac jrGen/*.java
0 jrrun test > sf.out 2>&1
0 scmp all.std sf.out

0 rm -rf jrGen core *.out cscan.jr repro.jr m_condvar.jr
