import edu.ucdavis.jr.JR;

/* results will almost always differ between executions.
 * uses signal_all (so only works with sc).
 */

/* SR version uses age(); JR version uses currentTimeMillis().
 * not same functionality, but simplest ;-)
 */
public class test {

   public static int done = 0;

   // would-be processes
   private static op void user(int);
   private static op void clock();

   // the monitor
   private static timer tim = new timer("tim");

   public static void main(String [] args) {
  System.out.println("simulation started at" + System.currentTimeMillis());


            // start up processes
	    send clock();
            for (int i = 1; i <= 4; i++) {
                send user(i);
            }
    }





  private static void user(int i) {
    for (int j = 1; j <= 10; j++) {
      System.out.println("process " + i + " sleeping at "
                         + System.currentTimeMillis() + " for " + 100*(i+j) );
      tim.delay(10*(i+j));
      System.out.println("process " + i + " awake    at " + System.currentTimeMillis());
    }
    done++;
  }

  private static void clock() {
  try {
    while(true) {
      Thread.sleep(10);
      tim.tick();
      if (done == 4) {break;}
    }
    System.out.println("simulation ended at" + System.currentTimeMillis());
        }
        catch (Exception oops) {
            System.err.println("Exception while...\n");
            oops.printStackTrace();
        }
  }

}
