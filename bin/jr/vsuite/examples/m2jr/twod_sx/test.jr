import edu.ucdavis.jr.JR;

public class test {

   // the monitor
   private static twod td = new twod("td");

   public static final int N = 10;  
   public static final int O = 9;  

   public static void main(String [] args) {
        try {
            JR.registerQuiescenceAction(q);
        }
        catch (Exception oops) {
            System.err.println("Exception while...\n");
            oops.printStackTrace();
        }
    }


    private static process p( (int i = 0; i< N; i++),
                              (int j = 0; j< O; j++) ) {
        try {
            System.out.println( i + " before" );
            for (int h = 0; h < 1; h++) {
                Thread.sleep(10-i);
                td.request(i, j, h);
            }
	    System.out.println( i + " after" );
        }
        catch (Exception oops) {
            System.err.println("Exception while...\n");
            oops.printStackTrace();
        }
    }
    private static op void q() {
            for (int h = 0; h < 1; h++) {
// not a very good test -- just make all wait and then awaken them once.
//// lazy: release when all waiting
                td.release();
            }
	    System.out.println( "q after" );
    }

}

