import edu.ucdavis.jr.JR;

public class a {

   private static int N = 10;
   // would-be processes
   private static op void p(int, mutex);

   // the CCRs
   private static mutex mtx = new mutex();
   private static mutex mtx2 = new mutex();

   private static sem done;

   public static void main(String [] args) {
        try {

	    // start up processes
	    for (int i = 1; i <= N; i++) {
	        send p(i,mtx);
	    }
	    for (int i = 1; i <= N; i++) {
	        send p(i,mtx2);
	    }

	    // wait for all processes to finish
	    for (int i = 1; i <= 2*N; i++) {
	        P(done);
	    }
	    JR.exit(0);

        }
        catch (Exception oops) {
            System.err.println("Exception while...\n");
            oops.printStackTrace();
        }
    }

    private static void p(int i, mutex mymtx) {
        try {
            Thread.sleep(10-i);
            _region mutex _with thism = mymtx _when thism.xfree {
                System.out.println(i); Thread.sleep(1);
                thism.xfree = false;
            }
            Thread.sleep(2);
            _region mutex _with thism = mymtx {
                System.out.println(i + " done"); Thread.sleep(1);
                thism.xfree = true;
            }
	    V(done);
        }
        catch (Exception oops) {
            System.err.println("Exception while...\n");
            oops.printStackTrace();
        }
    }
}
