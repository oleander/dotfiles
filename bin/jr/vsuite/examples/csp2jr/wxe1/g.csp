/* from CSP paper, but with user-supplied termination code
 * i.e., it will terminate under implicit termination or explicit termination.
 */
_program g {
  _specs {
    WEST {}
    X    { ch(char); die(); }
    EAST { ch(char); die(); } // op names needn't be unique across processes.
  }

  _process WEST {
    System.out.println("start of WEST");
    char c = 'a';
    while (c <= 'z') { _o X!ch(c); c++; }
    _o X!die();
  }

  _process X {
    System.out.println("start of X");
    char c; boolean more = true;
    _do
      _i (more) WEST?ch(c) {
        _o EAST!ch(c);
      }
      /* deliberate mismatch between -i and ! just to test csp2jr */
      _i (more) WEST!die() {
        _o EAST!die(); more = false;
      }
    _od
  }

  _process EAST {
    System.out.println("start of EAST");
    char c; int cnt = 0; boolean more = true;
    _do
      _i (more) X?ch(c) { cnt++; }
      _i (more) X?die() { more = false; }
    _od
    System.out.println(cnt);
  }

}
