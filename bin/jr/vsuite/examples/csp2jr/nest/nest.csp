_program nest {
  private static final int N = 7;
  _specs {
    A [N] { foo(int); }
  }

  _process A (i) {
    int x = -99;
    System.out.println("start of A " + i);
    _if
      _i [k = 0 _to N-1] (k!=i) A[k]?foo(x) {
        System.out.println(i + " got " + x + " from " + k);
_csp_status(false);
        _if
          _i [j = 0 _to N-1] (j==k) A[j]!foo(x) { // contradictory
            System.out.println(i + " got " + x + " from " + j + " " + k);
	  }
          _o [j = 0 _to N-1] (j==k) A[j]!foo(i*100) {
            System.out.println(i + " sent " + i*100 + " to " + j + " " + k);
	  }
        _fi
      }
      _o [k = 0 _to N-1] (k!=i) A[k]!foo(i*10) {
        System.out.println(i + " sent " + i*10 + " to " + k);
_csp_status(false);
        _if
          _i [j = 0 _to N-1] (j==k) A[j]?foo(x) {
            System.out.println(i + " got " + x + " from " + j + " " + k);
	  }
          _o [j = 0 _to N-1] (j==k) A[j]?foo(i*100) { // contradictory
            System.out.println(i + " sent " + i*100 + " to " + j + " " + k);
	  }
        _fi
      }
    _fi
  }

}
