/* resource spud */
/* SR version 2.3.1, December 1995 */


public class spud {
   public op void msg(int, String);
   public op void spud_init(remote spud [] mach);

   private int myid, nvm;
   private remote spud [] mach;

   public spud(int myid, int nvm) {
      this.myid = myid;
      this.nvm  = nvm;
      System.out.println((myid) + " " + ("created"));
      System.out.flush();

      //       try {
      // Thread.sleep(100); // let print thread run and output to keep order
      //	}
      //	catch (Exception e) {}
   }

   public void spud_init(remote spud [] mach) {
      this.mach = mach;
   }

   public void msg(int n, String seq) {
                System.out.println(myid + " " +
				   seq.substring(0,n+1)
		                   + " " +
				   seq.substring(n+1));

   	    System.out.flush();
	    // Thread.sleep(100); // let print thread run and output to keep order

   	    if (n+1 < seq.length()) {
      		int i = 
Integer.valueOf(seq.substring(n+1,n+2)).intValue();
////System.out.println("n i " + n + " " + i);

      		call mach[(i)].msg(n + 1, seq);
      	    }


                System.out.println(myid + " " +
				   seq.substring(0,n+1)
		                   + " " +
				   seq.substring(n+1));

   	    System.out.flush();
	    // Thread.sleep(100); // let print thread run and output to keep order
   }
}

