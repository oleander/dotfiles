// test quantifiers on processes and arrays of operations
// note: order of output is nondeterministic
public class b {
    public int N = 7;
    cap void (int) f[] = new cap void (int)[N];
    {
            for (int i = 0; i < N ; i++ ) {
                f[i] = new op void (int);
            }
    }
    public b() {
	System.out.println("initial starting");
    }
    process p0 {
	    System.out.println("in p0");
            for (int i = 0; i < N ; i++ ) {
		send f[i](1000+i+1);
	    }
    }
    process p4 ((int i = 1; i <= N; i++)) {
	    inni void f[i-1](int x) {
		System.out.println("in p4 "+i+" "+x);
	    }
    }
    process p2 ((int i = 1; i <= 0; i++)) {
	System.out.println("shouldn't happen");
    }
    process p3 ((int i = 1; i <= 2; i++)) {
	System.out.println("in p3 "+i);
    }
    process p5 {
	    send p3(1989);
	    send p3(1234567);
    }
}
