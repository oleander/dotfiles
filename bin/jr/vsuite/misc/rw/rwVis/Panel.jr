import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.util.*;
import edu.ucdavis.jr.JR;
import java.lang.*;

//panel for the assistant manager, that has the user and active list that have been created by the assistant manager
public class Panel extends JPanel {
	
	//cap to functions of the assistant manager
	private cap void () redraw;
	public cap java.util.List (String) getList;
	public cap java.util.List () getUsers;
	public cap java.util.List () getActive;
	public cap void () dispose;

	process redrawPanel {
		while (true) inni void redraw () st dispose.length() == 0 { repaint(); }
		[] void dispose () { break; }
	}
				
	//constructor that sets appropiate caps to functions and set attributes of panel
	public Panel(AssistantManager manager) {
		this.redraw = manager.repaint;
		this.getList = manager.getList;
		this.getUsers = manager.getUsers;
		this.getActive = manager.getActive;
		this.dispose = manager.dispose;

		setPreferredSize(new Dimension(240, 300));
		setBackground(Color.black);
		setVisible(true);
	}

	//swing draw function that draws the readers, writers and users local to this assistant manager
	public void paintComponent (Graphics g) {
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D) g;
		int wcount = 0;
		int rcount = 0;
		int count = 0;

		java.util.List users = new ArrayList();
		java.util.List active = new ArrayList();

		try{
			users = getList("users");
			active = getList("active");

//			users = getUsers();
//			active = getActive();
		} catch (java.lang.OutOfMemoryError e) { System.out.println("PaintComponent: OutOfMemoryError"); e.printStackTrace();}
		catch (edu.ucdavis.jr.jrCommunicationException e) { System.out.println("PaintComponent: Communication"); e.printStackTrace(); }

		Iterator itr = users.iterator();
		while (itr.hasNext()) {
			User u = (User) itr.next();
			if(u instanceof Writer)
				u.mydraw(g2, wcount++, 80);
			else	
				u.mydraw(g2, rcount++, 20);
		}

		itr = active.iterator();
		while (itr.hasNext()) {
			User u = (User) itr.next();
			u.mydraw(g2, count++, 190);
		}

        g2.setColor(Color.white);
                                                                                                                                              
        g2.setFont(new Font("Dialog", Font.BOLD, 14));
        g2.drawString("Queued", 30, 17);
        g2.drawString("Active", 175, 23);
                                                                                                                                              
        g2.setFont(new Font("Dialog", Font.PLAIN, 9));
        g2.drawString("Readers", 12, 29);
        g2.drawString("Writers", 73, 30);
	}
}
