import edu.ucdavis.jr.JR;

public class AQ
{
    private op void bag(double, double, double, double);

    private op void administrator();
    private op void worker();
    private op void done();

// these numbers cause program to run out of memory,
// which could be a good test in itself,
// but we'll not be as ambitious.
//    int N = 10000000;
//    int Q =   100000;
    int N = 100000;
    int Q =   1000;

    public AQ() {
	    System.out.println("AQ starting constructor");
	    send administrator();
	    send worker();

	    System.out.println("AQ finishing constructor");

	    receive done();
	    receive done();
JR.exit(0);  // Where n is the exit value currently ignored
     }

    private void administrator() {
            for ( int k = 1; k <= N; k++ ) {
	        send bag(1.0,2.0,3.0,4.0);
		if (k % Q == 0)
		    System.out.println("administrator sent k="+k);

	    }

            System.out.println("administrator done loop");
	    send done();
    }

    private void worker() {
            for ( int k = 1; k <= N; k++ ) {
	        double a, b, c, d;
	        receive bag(a,b,c,d);
		if (k % Q == 0)
		    System.out.println("worker received k="+k);
	    }

            System.out.println("worker done loop");
	    send done();
    }

}

