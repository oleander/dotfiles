//  input from capability, mostly single arm, local VM, no arrays

public class simcap
{
    private static op cap void () ret1st( cap void () c1,
					  cap void () c2) {
	return c1;
    }
    private static op cap void () ret2nd( cap void () c1,
					cap void () c2) {
	return c2;
    }

  private static cap cap void() (cap void(), cap void()) myArray[] =
    new cap cap void() (cap void(), cap void())[2];

  static {
    myArray[0] = ret1st;
    myArray[1] = ret2nd;
  }

  cap void () c;
  public simcap()
  {
    op void q();
    c = q;

    // test array
    for (int i = 0; i < 7; i++)
        send c();

    for (int i = 1; i <= 4; i++)
    {
	inni void myArray[0](c,q) ()
	    System.out.println("1st array -- all c's");
	[] else
	    System.out.print(" 0");

    }
    // remainder s/b in FIFO order
    for (int i = 1; i <= 3; i++)
    {
	inni void c()
	    System.out.print("c");

    }
    System.out.println();

    // g: new op via optype, more complex test
    send q ();
    send q ();
    send q ();
    send q ();
    for (int i = 1; i <= 4; i++)
    {
	inni void myArray[1](c,q) () System.out.println("2nd array -- all q's ");
    }

  }
}
