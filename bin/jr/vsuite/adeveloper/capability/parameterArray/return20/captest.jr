import edu.ucdavis.jr.JR;

public class captest {

   // not particularly interesting function
   private static op double fun1(double x) {
      return x;
   }

  // x squared...
   private static op double fun2(double x) {
      return x*x;
   }

  private static cap double (double) myfuncs[];

   private static op void set_myfuncs(cap double (double) fa[]) {
     myfuncs = fa;
   }

  private static op cap double (double) [] get_myfuncs() {
     return myfuncs;
   }

   private static op void func_invoker(cap double (double) fa[]) {
      for (int i = 0; i < fa.length; i++)
         System.out.printf("fa[%d](%f) = %f\n", i, Math.PI, fa[i](Math.PI));
   }

   // program entry point - no parameter checking
   public static void main(String [] args) {

      cap double (double) funcs[] = new cap double (double)[2];
 
      funcs[0] = fun1; funcs[1]=fun2;

      System.out.printf("fun1(%f) = %f\n", Math.PI, fun1(Math.PI));
      System.out.printf("fun1(%f) = %f\n", Math.PI, funcs[0](Math.PI));
      System.out.printf("fun2(%f) = %f\n", Math.PI, fun2(Math.PI));
      System.out.printf("fun2(%f) = %f\n", Math.PI, funcs[1](Math.PI));

      System.out.println("now via func_invoker 1st time");
      func_invoker(funcs);

      System.out.println("now via func_invoker 2nd time");
      set_myfuncs(funcs);
      cap double (double) funcs2[];
      funcs2 = get_myfuncs();
      func_invoker(funcs2);

      System.out.println("all done");
   }
}
