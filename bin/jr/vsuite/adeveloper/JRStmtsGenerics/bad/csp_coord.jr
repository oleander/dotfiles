import java.util.ArrayList;
import edu.ucdavis.jr.JR;

public class csp_coord {

    public static void main(String [] args) { new csp_coord(); }

    public op void csp_match();

    private ArrayList<ArrayList<Integer>> defer;
    int csp_np = 10;

    private sem xxxx = 5;

    public csp_coord() {

	// create with size csp_np, which doesn't increase.
	defer = new ArrayList<ArrayList<Integer>>();
	for (int k = 0; k < csp_np; k++) {
	    defer.add(new ArrayList<Integer>());
	    ArrayList<Integer> x = defer.get(k);
	    for (int h = 0; h<10-k; h++) {x.add(h);}
	}
	int OK = 3;
	System.out.println (defer.get(OK).size());
    }

    private process coordinator {
	int OK2 = 3;
	System.out.println (defer.get(OK2).size());

	int OK3 = 3;
	ArrayList<Integer> zzz = defer.get(OK3);
	System.out.println (zzz.size());

	send csp_match();
	inni void csp_match() {
	    System.out.println (defer.size());

	    sem wwww = 5;


	    int OK4 = 3;
	    ArrayList<Integer> zz = defer.get(OK4);
	    /// workaround:	ArrayList zz = ((ArrayList)defer.get(OK4));
	    System.out.println (zz.size());
	    System.out.println (defer.get(OK4).size());
	    // workaround: System.out.println (((ArrayList)defer.get(1)).size());
	    zz.add(new Integer(4)); // OK
	    zz.add(new Boolean(true)); // not OK -- make sure catch this one

	}
    }
}

