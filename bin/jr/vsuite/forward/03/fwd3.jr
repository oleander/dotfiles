/* resource fwd3 */

/* SR version 2.3.1, December 1995 */


public class fwd3 {
   public op int initop(int, String);
   public op int fwd1(int, String);
   public op int fwd2(int, String);
   public op int second_fwd(int, String);


   public op void wait_for_secondfwd();
public int initop_aft_fwd = 0;
public int fwd1_aft_fwd = 0;
  // 2010-07-18 interesting, race condition didn't show itself until now, so:
  sem didUpdate; /* did update of above variable */

public int[] second_fwd_arr = {0, 0};
public int i = 1;
public fwd3() {
   System.out.println((initop(i, "called from mainline")));
System.out.println((i));
System.out.println((initop_aft_fwd));
P(didUpdate);
System.out.println((fwd1_aft_fwd));
receive wait_for_secondfwd();
receive wait_for_secondfwd();
{
   int i;
   
L1: for (i = 2; (i<=3); i+=1) {
      {
         System.out.println((second_fwd_arr[(i) - 2]));
         }
      }
   }
}

public int initop(int i, String s) {
int result = -1;
ProcBody:{
   System.out.println(("initop : ") + " " + (s) + " " + (i));
   System.out.println(("forwarding to fwd1 "));
   i=2;
   s="forwarded by initop";
   forward fwd1(i, s);
   forward second_fwd(i, s);
   reply result;
   initop_aft_fwd=i * 10;
   result=i;
   break ProcBody;
   /*System.out.println(("initop : this should not have been printed"));*/
   }
return result;
}

public int fwd1(int j, String s) {
int result = -1;
ProcBody:{
   System.out.println(("fwd1 : ") + " " + (s) + " " + (j));
   System.out.println(("forwarding to fwd2 "));
   j=3;
   s="forwarded by fwd1";
   forward fwd2(j, s);
   reply result;
   forward second_fwd(j, s);
   fwd1_aft_fwd=j * 10;
   V(didUpdate);
   result=j;
   if (true){
      break ProcBody;
      }
   System.out.println(("initop : this should not have been printed"));
   }
return result;
}

public int fwd2(int k, String s) {
int result = -1;
ProcBody:{
   System.out.println(("fwd2 : ") + " " + (s) + " " + (k));
   if ((k>0)){
      k=k - 1;
      s="forwarded by fwd2";
      forward fwd2(k, s);
      }
   else {
      k=4;
      result=k;
      }
   break ProcBody;
/*
   s="forwarded by fwd2";
   forward second_fwd(k, s);
   System.out.println(("initop : this should not have been printed"));
*/
   }
return result;
}

public int second_fwd(int i, String s) {
int result = -1;
ProcBody:{
   second_fwd_arr[(i) - 2]=i;
   result=5;
   send wait_for_secondfwd();
   }
return result;
}
}

