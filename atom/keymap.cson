# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# 'body':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
'.editor':
  'ctrl-shift-right': 'editor:select-to-end-of-word'
  'ctrl-shift-left': 'editor:select-to-beginning-of-word'
  'ctrl-k': "editor:delete-to-end-of-line"
  'cmd-shift-m': "bookmarks:toggle-bookmark"
  'cmd-shift-j': "bookmarks:jump-to-next-bookmark"
  'cmd-shift-r': "bookmarks:clear-bookmarks"
  "cmd-'": "toggle-quotes:toggle"

'.active.pane':
  'ctrl-space': 'autocomplete:toggle'
'atom-text-editor[data-grammar="text html erb"]:not([mini])':
    "tab": "emmet:expand-abbreviation-with-tab"

# 'atom-text-editor.vim-mode-plus:not(.insert-mode)':
#     'q': 'atom-keyboard-macros-vim:toggle_record_macro_vi
#     '@': 'atom-keyboard-macros-vim:execute_macro_vim'
#     'Q': 'atom-keyboard-macros:call_last_kbd_macro'

# 'atom-text-editor.vim-mode:not(.insert-mode)':
    # 'q': 'atom-keyboard-macros-vim:toggle_record_macro_vim'
    # '@': 'atom-keyboard-macros-vim:execute_macro_vim'
    # 'Q': 'atom-keyboard-macros:call_last_kbd_macro'
    # 'g 0': 'vim-mode:move-to-last-character-of-line'
    # 'g 9': 'vim-mode:move-to-first-character-of-line'
    # 'g i': 'goto-last-edit:back'

# 'atom-text-editor.vim-mode-plus.normal-mode':
#   ':': 'vim-mode-plus-ex-mode:open'
#   '!': 'vim-mode-plus-ex-mode:toggle-setting'
