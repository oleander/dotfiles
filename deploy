#!/usr/bin/env ruby

require "open3"
require "colorize"

zsh_config = "~/.dotfiles/zshrc"
reload = "source #{zsh_config}"

def run(command, silent = false)
  out, err, status = Open3.capture3(command)
  return status.success? if silent
  abort "Error: #{command}\n#{err.red}" unless status.success?
  true
end

def zsh(command)
  "zsh -c '#{command.gsub(/'/, "\\'")}'"
end

def remote(host, reload)
  zsh("cd ~/.dotfiles && git stash && git pull && #{reload} && upgrade_oh_my_zsh")
end

unless run("[[ -z $(git status -s) ]]", true)
  abort "Please commit your changes first"
end

unless run zsh("source #{zsh_config}")
  abort "Check #{zsh_config}, it fails"
end

puts "Update oh my zsh locally"
run zsh("#{reload} && upgrade_oh_my_zsh")

puts "Push to Github"
run "git push"

["ocean", "atlantic"].each do |host|
  puts "Updating #{host} host"
  run "ssh #{host} #{remote(host, reload)}"
end